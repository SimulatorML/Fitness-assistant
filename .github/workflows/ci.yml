name: Fitness-Assistant CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      db:
        image: postgres:15
        env:
          POSTGRES_USER: fitness
          POSTGRES_PASSWORD: fitness
          POSTGRES_DB: fitness
        ports:
          - 5432:5432

    steps:
      - name: 🧾 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12"

      - name: 📦 Install Poetry
        run: pip install poetry

      - name: 📥 Install Dependencies
        run: poetry install

      - name: 🗂 Copy environment variables from .env.example
        run: cp .env.example .env

      - name: 🔐 Export .env to GITHUB_ENV
        run: |
          echo "Exporting .env variables..."
          while IFS='=' read -r key value; do
            echo "$key=$value" >> $GITHUB_ENV
          done < <(grep -v '^#' .env | xargs)

      - name: 🔁 Override DATABASE_URL for CI
        run: echo "DATABASE_URL=postgresql+asyncpg://fitness:fitness@localhost:5432/fitness" >> $GITHUB_ENV

      - name: 🧪 Print env vars for debug
        run: printenv | grep DATABASE_URL || true

      - name: 🛠 Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install -y postgresql-client

      - name: ⏳ Wait for PostgreSQL to be ready
        env:
          PGPASSWORD: fitness
        run: |
          echo "Waiting for PostgreSQL to be ready..."
          for i in {1..5}; do
            psql -h localhost -U fitness -d fitness -c 'SELECT 1;' && echo "✅ DB is up!" && exit 0
            echo "⏳ DB not ready yet ($i)..."
            sleep 3
          done
          echo "❌ Database not ready in time" >&2
          exit 1

            - name: ✍️ Autogenerate Alembic migration
        env:
          DATABASE_URL: postgresql+asyncpg://fitness:fitness@localhost:5432/fitness
        run: |
          mkdir -p alembic_output
          poetry run alembic revision --autogenerate -m "CI autogen" || echo "⚠️ No changes detected"
          mv migrations/versions/*.py alembic_output/ || echo "No new migration files"

      - name: 📦 Upload generated Alembic migrations
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: alembic-migrations
          path: alembic_output/

      - name: 🛠 Run Alembic migrations
        env:
          DATABASE_URL: postgresql+asyncpg://fitness:fitness@localhost:5432/fitness
        run: poetry run alembic upgrade head

      - name: 📋 Check existing tables
        env:
          PGPASSWORD: fitness
        run: |
          echo "📋 Tables in the DB:"
          psql -h localhost -U fitness -d fitness -c '\dt'

      - name: ✅ Run FastAPI Tests
        run: poetry run pytest tests/test_api.py

      - name: ✅ Run Onboarding Test
        run: poetry run pytest tests/test_onboarding.py
